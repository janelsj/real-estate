{"version":3,"sources":["common_functions/API.js","common_functions/ShowContent.js","components/property/Properties-all.js","components/property/Property-individual.js","components/property/Properties-SearchSaleRent.js","components/Homepage.js","common_functions/dropdown-list-maker.js","components/agent/Agents.js","components/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["API","axios","create","baseURL","headers","Content","isLoaded","dataToShow","override","css","className","color","loading","height","width","radius","margin","PropertiesAll","useState","propertiesList","setPropertiesList","isAPILoaded","setIsAPILoaded","useEffect","propertiesArray","get","then","response","data","eachProperty","propertyData","id","price","location","bedrooms","noOfBedrooms","size","sizeInSqFt","sale","isSale","rent","isRent","push","map","item","nanoid","to","Property","property","setProperty","propertyId","useParams","PropertiesSearch","searchParameter","PropertiesSale","propertiesSale","setPropertiesSale","propertiesSaleArray","propertiesSaleData","catch","error","console","length","log","properties","PropertiesRent","Homepage","DropdownListMaker","searchBy","list","setList","value","toLowerCase","AgentsAll","agentsList","setAgentsList","agentsArray","eachAgent","agentData","fullName","contactNo","email","AgentsSearch","region","setRegion","specialty","setSpecialty","htmlFor","name","onChange","e","target","options","selectedIndex","Agent","agent","setAgent","agentId","NotFoundPage","useLocation","pathname","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b8000c8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n    baseURL: \"https://dry-everglades-96859.herokuapp.com\",\r\n    headers: {'Access-Control-Allow-Origin': '*'}\r\n});\r\n\r\nexport default API;","import { css } from \"@emotion/react\";\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\r\n\r\nfunction Content({isLoaded, dataToShow}){\r\n\r\n  const override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    padding-top: 20px;\r\n    border-color: blue;\r\n`;\r\n\r\n  return(<div className=\"graph\">\r\n    {isLoaded ? \r\n        dataToShow\r\n        : <ScaleLoader color='gray' loading={!isLoaded} css={override} height={70} width={10} radius={30} margin={5}/>\r\n      }\r\n    </div>)\r\n}\r\n\r\nexport default Content;","import {useState, useEffect} from 'react';\r\nimport {nanoid} from 'nanoid';\r\nimport API from '../../common_functions/API';\r\nimport Content from '../../common_functions/ShowContent';\r\nimport {Link} from 'react-router-dom';\r\nimport './property.css';\r\n\r\nfunction PropertiesAll(){\r\n\r\n    const [propertiesList, setPropertiesList] = useState([]);\r\n    const [isAPILoaded, setIsAPILoaded] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        let propertiesArray = [];\r\n        /* Get data for webpage from API*/\r\n        API.get('/general/properties/all').then(response => {\r\n            for(let eachProperty of response.data.data){\r\n                const propertyData = {\r\n                    id: eachProperty.id,\r\n                    price: eachProperty.price,\r\n                    location: eachProperty.location,\r\n                    bedrooms: eachProperty.noOfBedrooms,\r\n                    size: eachProperty.sizeInSqFt,\r\n                    sale: eachProperty.isSale,\r\n                    rent: eachProperty.isRent\r\n                };\r\n                propertiesArray.push(propertyData);\r\n            }\r\n            // console.log(propertiesArray);\r\n            setPropertiesList(propertiesArray);\r\n            setIsAPILoaded(true);\r\n            }\r\n        );\r\n        \r\n        return () => setIsAPILoaded(false);\r\n\r\n    },[]);\r\n\r\n    return(<>\r\n        <div className=\"title\">\r\n            <h1>All properties</h1>\r\n        </div>\r\n        <Content \r\n          dataToShow={\r\n            <div id=\"propertiesAll\">\r\n                {propertiesList.map(item => {\r\n                    return (<div className=\"eachProperty-dataBox\" key={nanoid()}>\r\n                        <ul key={nanoid()}>\r\n                            <li key={nanoid()}>Valuation: {item.price}</li>\r\n                            <li key={nanoid()}>Location: {item.location}</li>\r\n                            <li key={nanoid()}>No. of Bedrooms: {item.bedrooms}</li>\r\n                            <li key={nanoid()}>Size: {item.size} square ft</li>\r\n                            <li key={nanoid()}>{item.sale ? 'For sale':'For rent'}</li>\r\n                            <li key={nanoid()}><Link to={`/properties/id/${item.id}`}>See more details</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            }\r\n          isLoaded={isAPILoaded}\r\n        />\r\n    </>)\r\n};\r\n\r\nexport default PropertiesAll;","import {useState, useEffect} from 'react';\r\nimport API from '../../common_functions/API';\r\nimport Content from '../../common_functions/ShowContent';\r\nimport {nanoid} from 'nanoid';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport './property.css';\r\n\r\nexport function Property(){\r\n    const [property, setProperty] = useState({\r\n        price: '',\r\n        location: '',\r\n        bedrooms: '',\r\n        size: '',\r\n        sale: false,\r\n        rent: false\r\n    });\r\n    const [isAPILoaded, setIsAPILoaded] = useState(false);\r\n    let {propertyId} = useParams();\r\n\r\n    useEffect(()=>{\r\n        /* Get data for webpage from API*/\r\n        API.get(`/general/properties/id/${propertyId}`).then(response => {\r\n            const propertyData = {\r\n                price: response.data.data.price,\r\n                location: response.data.data.location,\r\n                bedrooms: response.data.data.noOfBedrooms,\r\n                size: response.data.data.sizeInSqFt,\r\n                sale: response.data.data.isSale,\r\n                rent: response.data.data.isRent\r\n            };\r\n            setProperty(propertyData);\r\n            setIsAPILoaded(true);\r\n            }\r\n        );\r\n        \r\n        return () => setIsAPILoaded(false);\r\n\r\n    },[]);\r\n\r\n    return(<>\r\n        <div className=\"title\">\r\n            <h2>Property: {propertyId}</h2>\r\n        </div>\r\n        <Content \r\n          dataToShow={\r\n            <div id=\"property-individual\">\r\n                <ul key={nanoid()}>\r\n                    <li key={nanoid()}><b>Location:</b> {property.location}</li>\r\n                    <li key={nanoid()}><b>Valuation:</b> {property.price}</li>\r\n                    <li key={nanoid()}><b>Size:</b> {property.bedrooms} bedrooms,  {property.size} square feet</li>\r\n                    <li key={nanoid()}>{property.sale ? 'For sale':'For rent'}</li>\r\n                    <li key={nanoid()}><Link to = \"/properties/all\">Back to all properties</Link></li>\r\n                </ul>\r\n            </div>\r\n            }\r\n          isLoaded={isAPILoaded}\r\n        />\r\n    </>)\r\n};\r\n\r\nexport default Property;","import React, { useEffect, useState } from 'react';\r\nimport API from '../../common_functions/API';\r\nimport Content from '../../common_functions/ShowContent';\r\nimport './property.css';\r\n\r\nexport function PropertiesSearch({searchParameter}){\r\n    \r\n    return(<>\r\n        <h2>This is content for retrieving selected properties according to search parameter.</h2>\r\n    </>)\r\n};\r\n\r\nexport function PropertiesSale(){\r\n    const [propertiesSale, setPropertiesSale] = useState('');\r\n    const [isAPILoaded, setIsAPILoaded] = useState(false);\r\n    let propertiesSaleArray = [];\r\n\r\n    useEffect(() => {\r\n        API.get('/general/properties/search/isSale/true')\r\n        .then((response) => {\r\n            const propertiesSaleData = response.data.data;\r\n            setPropertiesSale(propertiesSaleData);\r\n        })\r\n        .catch(error => console.error(`Error: ${error}`));\r\n\r\n        return () => setIsAPILoaded(false);\r\n\r\n    }, []);\r\n\r\n    propertiesSaleArray = propertiesSale;\r\n\r\n    if (propertiesSaleArray.length > 0) {\r\n        console.log(propertiesSaleArray);\r\n \r\n         return ( \r\n             <div className = \"propertiesSale\" >\r\n             <h2>List of properties for sale</h2>\r\n                 {propertiesSaleArray.map(properties =>\r\n                 <ul key={properties.id}>\r\n                    <li><b>{properties.location}</b></li>\r\n                    <li>Price: ${properties.price}</li>\r\n                    <li>{properties.noOfBedrooms} bedrooms</li>\r\n                 </ul>\r\n                 )}\r\n             </div>\r\n         );  \r\n     } else {\r\n         return(<>\r\n             <h2>There is no properties listed for sale.</h2>\r\n         </>)\r\n     }  \r\n};\r\n\r\nexport function PropertiesRent(){\r\n    return(<>\r\n        <h2>This is content for all properties listed for rent.</h2>\r\n    </>)\r\n};","function Homepage(){\r\n    return(<div id=\"homepage\">\r\n    <h1>This is content for Homepage.</h1>\r\n    </div>)\r\n}\r\nexport default Homepage;","import {useState, useEffect} from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nfunction DropdownListMaker({searchBy}) {\r\n\r\n    const[list, setList] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        const regionList = ['North', 'South', 'East', 'West'];\r\n        const specialtyList = ['Luxury', 'Condominium', 'HDB'];\r\n\r\n        if (searchBy === 'region') {\r\n            setList(regionList);\r\n        } else if (searchBy === 'specialty') {\r\n            setList(specialtyList);\r\n        }\r\n\r\n        return () => setList([]);\r\n    }, [])\r\n    \r\n    return(<>\r\n        <option key={nanoid()} value=\"\">Select</option>\r\n        {list.map(item => {\r\n            return <option key={nanoid()} value={`${item.toLowerCase()}`}>{`${item}`}</option>\r\n        })}\r\n    </>)\r\n}\r\n\r\nexport default DropdownListMaker;","import {useState, useEffect} from 'react';\r\nimport {nanoid} from 'nanoid';\r\nimport API from '../../common_functions/API';\r\nimport Content from '../../common_functions/ShowContent';\r\nimport DropdownListMaker from '../../common_functions/dropdown-list-maker';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport './agent.css';\r\n\r\nexport function AgentsAll(){\r\n\r\n    const [agentsList, setAgentsList] = useState([]);\r\n    const [isAPILoaded, setIsAPILoaded] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        let agentsArray = [];\r\n        /* Get data for webpage from API*/\r\n        API.get('/general/agent/all').then(response => {\r\n            for(let eachAgent of response.data.data){\r\n                const agentData = {\r\n                    id: eachAgent.id,\r\n                    fullName: eachAgent.fullName,\r\n                    contactNo: eachAgent.contactNo,\r\n                    email: eachAgent.email,\r\n                };\r\n                agentsArray.push(agentData);\r\n            }\r\n            // console.log(agentsArray);\r\n            setAgentsList(agentsArray);\r\n            setIsAPILoaded(true);\r\n            }\r\n        );\r\n        \r\n        return () => setIsAPILoaded(false);\r\n\r\n    },[]);\r\n\r\n    return(<>\r\n        <div className=\"title\">\r\n            <h2>All agents</h2>\r\n        </div>\r\n        <Content \r\n          dataToShow={\r\n            <div id=\"agent\">\r\n                {agentsList.map(item => {\r\n                    return (<div className=\"eachAgent-dataBox\" key={nanoid()}>\r\n                        <ul key={nanoid()}>\r\n                            <li key={nanoid()}><b>{item.fullName}</b></li>\r\n                            <li key={nanoid()}>{item.contactNo}</li>\r\n                            <li key={nanoid()}>{item.email}</li>\r\n                            <li key={nanoid()}><Link to = {`/agents/id/${item.id}`}>See detailed profile</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            }\r\n          isLoaded={isAPILoaded}\r\n        />\r\n    </>)\r\n};\r\n\r\nexport function AgentsSearch(){\r\n\r\n    const [region, setRegion] = useState('');\r\n    const [specialty, setSpecialty] = useState('');\r\n    const [agentsList, setAgentsList] = useState([]);\r\n    const [isAPILoaded, setIsAPILoaded] = useState(false);\r\n\r\n    useEffect(()=>{     \r\n        let agentsArray = [];\r\n\r\n        if(region !== \"\"){\r\n             /* Get data for webpage from API*/\r\n            API.get(`/general/agent/region/${region}`).then(response => {\r\n                for(let eachAgent of response.data.data){\r\n                    const agentData = {\r\n                        id: eachAgent.id,\r\n                        fullName: eachAgent.fullName,\r\n                        contactNo: eachAgent.contactNo,\r\n                        email: eachAgent.email,\r\n                        specialty: eachAgent.specialty,\r\n                    };\r\n                    agentsArray.push(agentData);\r\n                }\r\n                setAgentsList(agentsArray);\r\n                setIsAPILoaded(true);\r\n                }\r\n            );\r\n        } else if (specialty !== \"\") {\r\n            /* Get data for webpage from API*/\r\n            API.get(`/general/agent/specialty/${specialty}`).then(response => {\r\n                for(let eachAgent of response.data.data){\r\n                    const agentData = {\r\n                        id: eachAgent.id,\r\n                        fullName: eachAgent.fullName,\r\n                        contactNo: eachAgent.contactNo,\r\n                        email: eachAgent.email,\r\n                        region: eachAgent.region,\r\n                    };\r\n                    agentsArray.push(agentData);\r\n                }\r\n                setAgentsList(agentsArray);\r\n                setIsAPILoaded(true);\r\n                }\r\n            );\r\n        }\r\n\r\n        return () => setIsAPILoaded(false);\r\n\r\n    },[region, specialty]);\r\n\r\n    return(<>\r\n        <div className=\"title\">\r\n            <h2>Agents</h2>\r\n        </div>\r\n        <div className=\"selection\">\r\n            <label htmlFor=\"region\">Choose region:</label>\r\n            <select name=\"region\" value={region} onChange={e => {\r\n                setRegion(e.target.options[e.target.selectedIndex].value);\r\n                setSpecialty(\"\");\r\n                }}>\r\n                <DropdownListMaker searchBy='region'/>\r\n            </select><br/>\r\n            <label htmlFor=\"specialty\">Choose property type:</label>\r\n            <select name=\"specialty\" value={specialty} onChange={e => {\r\n                setSpecialty(e.target.options[e.target.selectedIndex].value);\r\n                setRegion(\"\");\r\n            }}>\r\n                <DropdownListMaker searchBy='specialty'/>\r\n            </select> \r\n        </div>\r\n        {(region === \"\" && specialty === \"\") ? \r\n        <Content \r\n        dataToShow={\r\n          <div id=\"agent\">\r\n              <h3>Please make a selection.</h3>\r\n          </div>\r\n          }\r\n        isLoaded=\"true\"\r\n      />\r\n        : <Content \r\n          dataToShow={\r\n            <div id=\"agent\">\r\n                {agentsList.map(item => {\r\n                    return (<div className=\"eachAgent-dataBox\" key={nanoid()}>\r\n                        <ul key={nanoid()}>\r\n                            <li key={nanoid()}><b>{item.fullName}</b></li>\r\n                            <li key={nanoid()}>{item.contactNo}</li>\r\n                            <li key={nanoid()}>{item.email}</li>\r\n                            <li key={nanoid()}>{item.specialty ? `Specializes in: ${item.specialty} properties`:`In charge of: ${item.region} region`}</li>\r\n                            <li key={nanoid()}><Link to = {`/agents/id/${item.id}`}>See detailed profile</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            }\r\n          isLoaded={isAPILoaded}\r\n        />\r\n    } \r\n    </>)\r\n};\r\n\r\nexport function Agent(){\r\n    const [agent, setAgent] = useState({\r\n        fullName: '',\r\n        contactNo: '',\r\n        email: '',\r\n        specialty: '',\r\n        region: '',\r\n    });\r\n    const [isAPILoaded, setIsAPILoaded] = useState(false);\r\n    let {agentId} = useParams();\r\n\r\n    useEffect(()=>{\r\n        /* Get data for webpage from API*/\r\n        API.get(`/general/agent/id/${agentId}`).then(response => {\r\n            const agentData = {\r\n                fullName: response.data.data.fullName,\r\n                contactNo: response.data.data.contactNo,\r\n                email: response.data.data.email,\r\n                specialty: response.data.data.specialty,\r\n                region: response.data.data.region,\r\n            };\r\n            setAgent(agentData);\r\n            setIsAPILoaded(true);\r\n            }\r\n        );\r\n        \r\n        return () => setIsAPILoaded(false);\r\n\r\n    },[]);\r\n\r\n    return(<>\r\n        <div className=\"title\">\r\n            <h2>{agent.fullName}</h2>\r\n        </div>\r\n        <Content \r\n          dataToShow={\r\n            <div id=\"agent-individual\">\r\n                <ul key={nanoid()}>\r\n                    <li key={nanoid()}><b>Contact number:</b> {agent.contactNo}</li>\r\n                    <li key={nanoid()}><b>Email:</b> {agent.email}</li>\r\n                    <li key={nanoid()}><b>Specializes in:</b> {agent.specialty} properties</li>\r\n                    <li key={nanoid()}><b>In charge of:</b> {agent.region} region</li>\r\n                    <li key={nanoid()}><Link to = \"/agents/search\">Back to: Find agent</Link></li>\r\n                    <li key={nanoid()}><Link to = \"/agents/all\">Back to: All agents</Link></li>\r\n                </ul>\r\n            </div>\r\n            }\r\n          isLoaded={isAPILoaded}\r\n        />\r\n    </>)\r\n};","import {useLocation} from 'react-router-dom';\r\n\r\nfunction NotFoundPage() {\r\n    const location = useLocation();\r\n    return (<div id = \"error\">\r\n        <h2>Error: page {location.pathname} does not exist.</h2>\r\n    </div>)\r\n}\r\n\r\nexport default NotFoundPage;","import {BrowserRouter as Router, Link, Route, Routes} from 'react-router-dom';\r\nimport PropertiesAll from './components/property/Properties-all';\r\nimport Property from './components/property/Property-individual';\r\nimport {PropertiesSearch, PropertiesSale, PropertiesRent} from './components/property/Properties-SearchSaleRent';\r\nimport Homepage from './components/Homepage';\r\nimport {AgentsAll, AgentsSearch, Agent} from './components/agent/Agents';\r\nimport NotFoundPage from './components/NotFoundPage';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (<div id = \"parent\">\r\n    <Router>\r\n    <div className=\"container\">\r\n       <div className=\"navbar\">\r\n       <div className=\"dropdown\">\r\n          <button className=\"dropdownButton\"><Link to = \"/real-estate\">Home</Link></button>\r\n        </div>\r\n          <div className=\"dropdown\">\r\n            <button className=\"dropdownButton\">Properties </button>\r\n            <div className=\"dropdown-content\">\r\n              <Link to = \"/properties/all\">Browse all</Link>\r\n              <Link to = \"/properties/sale\">For sale</Link>\r\n              <Link to = \"/properties/rent\">For rent</Link>\r\n              <Link to = \"/properties/search\">Search properties</Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"dropdown\">\r\n            <button className=\"dropdownButton\">Agents</button>\r\n            <div className=\"dropdown-content\">\r\n              <Link to = \"/agents/all\">Browse all</Link>\r\n              <Link to = \"/agents/search\">Find Agent</Link>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <Routes>\r\n        <Route path=\"/real-estate\" element={<Homepage />} />\r\n        <Route path=\"/properties/all\" element={<PropertiesAll />} />\r\n        <Route path=\"/properties/sale\" element={<PropertiesSale />} />\r\n        <Route path=\"/properties/rent\" element={<PropertiesRent />} />\r\n        <Route path=\"/properties/search\" element={<PropertiesSearch />} />\r\n        <Route path=\"/properties/id/:propertyId\" element={<Property />} />\r\n        <Route path=\"/agents/all\" element={<AgentsAll />} />\r\n        <Route path=\"/agents/search\" element={<AgentsSearch />} />\r\n        <Route path=\"/agents/id/:agentId\" element={<Agent />} />\r\n        <Route path=\"*\" element={<NotFoundPage />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n    </Router>\r\n</div>);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}